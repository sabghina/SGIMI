@model BT.Stage.SGIMI.UserInterface.ViewModel.CreateInterventionViewModel
@{
    ViewBag.Title = "Terminer une intervention";
}
<style>
    h2
    {
        font-style:oblique;
        color:white;
    }
</style>
<h2>Terminer Intervention  </h2>
@using (Html.BeginForm("Terminer", "Intervention", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.HiddenFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProblemeConstate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProblemeConstate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProblemeConstate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TraveauxEffectues, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TraveauxEffectues, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TraveauxEffectues, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Terminer" class="btn btn-default" />
        </div>
    </div>
</div>
}

