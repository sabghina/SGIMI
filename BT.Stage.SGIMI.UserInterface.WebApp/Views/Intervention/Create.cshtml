@model BT.Stage.SGIMI.UserInterface.ViewModel.InterventionViewModel
@{
    ViewBag.Title = "Ajouter une intervention";
}
@{
    List<SelectListItem> listN = new List<SelectListItem>();
    listN.Add(new SelectListItem
    {
        Text = "Intervention sous contrat de maintenance",
        Value = "Intervention sous contrat de maintenance",
        Selected = true
    });
    listN.Add(new SelectListItem
    {
        Text = "Intervention sous garantie",
        Value = "Intervention sous garantie",

    });
    listN.Add(new SelectListItem
    {
        Text = "Intervention hors contrats de maintenance",
        Value = "Intervention hors contrats de maintenance",

    });
}
@{
    List<SelectListItem> listType = new List<SelectListItem>();
    listType.Add(new SelectListItem
    {
        Text = "Technicien BT",
        Value = "Technicien BT",
        Selected = true
    });
    listType.Add(new SelectListItem
    {
        Text = "Societé Tierce",
        Value = "Societé Tierce",

    });

}
@{
    List<SelectListItem> listEtat = new List<SelectListItem>();
   @* listEtat.Add(new SelectListItem
    
    {
        Text = "Choisir Etat",
        Value = "Choisir Etat",
        Selected = true
    }); *@
    listEtat.Add(new SelectListItem
    {
        Text = "En cours",
        Value = "En cours",
        Selected = true
    });
    listEtat.Add(new SelectListItem
    {
        Text = "Terminé",
        Value = "Terminé",

    });
    listEtat.Add(new SelectListItem
    {
        Text = "Annuler",
        Value = "Annuler",
        Selected = true
    });

}
<h2>Intervention sur reclamation @Model.Reclamation</h2>


@using (Html.BeginForm("Create", "Intervention", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Reclamation)
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, listType, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Nature, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Nature, listN, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Nature, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Etat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Etat, listEtat, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Etat, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProblèmeConstaté, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProblèmeConstaté, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProblèmeConstaté, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TraveauxEffectués, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TraveauxEffectués, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TraveauxEffectués, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.Reclamation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Reclamation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Reclamation, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ajouter" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
